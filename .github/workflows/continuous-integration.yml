name: Continuous Integration

on:
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened, labeled]
  push:
    branches: [main]

permissions:
  contents: write
  pull-requests: write

jobs:
  validate:
    runs-on: ubuntu-20.04
    name: Validate
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup node v20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: 'https://registry.npmjs.org/'
          cache: yarn

      - name: Install dependencies
        run: yarn install --ignore-scripts

      - name: Linting
        run: yarn lint

      - name: Prettier
        run: yarn check-format

      - name: Compile
        run: yarn check-types

  release-please:
    runs-on: ubuntu-latest
    needs: [validate]
    outputs:
      releases_created: ${{ steps.release-please.outputs.releases_created }}
      paths_released: ${{ steps.release-please.outputs.paths_released }}
    steps:
      - uses: googleapis/release-please-action@v4
        id: release-please
        with:
          config-file: release-please-config.json
          manifest-file: .release-please-manifest.json
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Print release outputs for debugging
        continue-on-error: true
        run: |
          echo "Release outputs:"
          echo ${{ toJson(steps.release-please.outputs) }}

  # Initiate release process if release was created
  release-package:
    if: ${{needs.release-please.outputs.releases_created}}
    runs-on: ubuntu-latest
    needs: [release-please]
    strategy:
      fail-fast: false
      matrix:
        package: ${{fromJson(needs.release-please.outputs.paths_released)}}
    steps:
      - name: Checkout credo-ts-didcomm-ext
        uses: actions/checkout@v4

      - name: Setup Node.js for NPM Publishing
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: 'https://registry.npmjs.org'

      - name: Enable Corepack and Setup Yarn
        run: |
          corepack enable
          corepack prepare yarn@3.6.1 --activate
          yarn --version

      - name: Publish NPM packages
        env:
          NPM_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          yarn install --immutable
          yarn build
          echo "//registry.npmjs.org/:_authToken=${NPM_AUTH_TOKEN}" > ~/.npmrc
          yarn config set npmAuthToken ${NPM_AUTH_TOKEN}
          npm publish
